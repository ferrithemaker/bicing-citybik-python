# uses influx database data generated by bicing.py script
# this script creates a csv file with an analysis of station usage ratio. Unbalanced means a regular lack of bikes / free slots
# (0% - 50% optimal station) (50% - 75% balanced station) (75% - 100% unbalanced station)

from influxdb import InfluxDBClient
import requests
import json

# Influx setup
influxclient = InfluxDBClient(host='localhost', port=8086)
influxclient.switch_database('bicing')

r = requests.get('http://api.citybik.es/v2/networks/bicing')
bicingJson = r.json()
bicingFile = open("bicing.csv","w")
bicingFile.write("name|latitude|longitude|deviation\n")
for station in bicingJson['network']['stations']:
	stationdata = influxclient.query('SELECT bikes,slots FROM bicing_accounting WHERE id = \''+station['id']+'\';')
	stationdata = stationdata.get_points()
	deviation = 0
	index = 0
	for item in stationdata:
		total = int(item['bikes'])+int(item['slots'])
		deviation = deviation + abs(int(item['bikes']) - int(total/2))
		index = index + 1
	if index != 0 and total !=0:
		bicingFile.write("%s|%f|%f|%f\n" % (station['name'],station['latitude'],station['longitude'],((deviation / index) / (total / 2)) * 100))
bicingFile.close()
